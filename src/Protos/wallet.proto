syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "primitives.proto";

package ProjectOrigin.Wallet.V1;

service WalletService {
    rpc CreateSection(CreateWalletSectionRequest) returns (WalletSectionReference);
    rpc ReceiveSlice(ReceiveRequest) returns (ReceiveResponse);
    rpc QueryGranularCertificates(QueryRequest) returns (QueryResponse);
}

message ReceiveRequest {
    bytes WalletSectionPublicKey = 1;
    uint32 WalletSectionPosition = 2;
    ProjectOrigin.Register.v1.FederatedStreamId CertificateId = 3;
    uint32 Quantity = 4;
    bytes RandomR = 5;
}

message ReceiveResponse {

}

message QueryRequest {

}

message QueryResponse {
    repeated GranularCertificate GranularCertificates = 1;
}

message GranularCertificate {
    ProjectOrigin.Register.v1.FederatedStreamId FederatedId = 1;
    uint32 Quantity = 2;
    google.protobuf.Timestamp Start = 3;
    google.protobuf.Timestamp End = 4;
    repeated Attribute Attributes = 5;
}

message Attribute {
    string Key = 1;
    string Value = 2;
}

message CreateWalletSectionRequest {
}

message WalletSectionReference {
    int32 Version = 1; // The version of the Wallet protobuf API.
    string Endpoint = 2; // The url endpoint of the gRPC endpoint at which the wallet is hosted.
    bytes SectionPublicKey = 3; // The public key used to generate sub-public-keys for each slice.
}
